openapi: "3.0.2"
info:
  title: Bank Account Opening Service API spec
  version: 0.9.0
tags:
  - name: Update Registration
    description: Update the bank registration
  - name: Verify Registration
    description: Verify the bank registration
paths:
  /registrations:
    post:
      summary: Create a new bank registration
      description: Create a new empty bank registration
      operationId: createRegistration
      tags:
        - Update Registration
      responses:
        201:
          description: Created. Create new registration successfully.
          content:
            application/json:
              schema:
                title: CreateRegistrationResponse
                type: object
                properties:
                  registrationId:
                    type: string
                    description: The registration unique id
                    example: 92824161-3730-4625-a93d-8a16bc1c9f18
        400:
          description: Bad request.
        401:
          description: Unauthorized. The caller is unauthorized.
        403:
          description: Forbidden. The caller has no permision.
  /registrations/{registrationId}:
    get:
      summary: Get registration by id
      description: Get the registration by id
      operationId: getRegistration
      tags:
        - Update Registration
      parameters:
        - in: path
          name: registrationId
          required: true
          schema:
            type: string
            example: 92824161-3730-4625-a93d-8a16bc1c9f18
      responses:
        200:
          description: OK. Get registration by id successfully.
          content:
            application/json:
              schema:
                title: GetRegistrationResponse
                type: object
                properties:
                  registrationId:
                    type: string
                    description: The registration unique id
                    example: 92824161-3730-4625-a93d-8a16bc1c9f18
                  customer:
                    $ref: "#/components/schemas/Customer"
                  identityDocument:
                    $ref: "#/components/schemas/IdentityDocument"
        400:
          description: Bad request.
        401:
          description: Unauthorized. The caller is unauthorized.
        403:
          description: Forbidden. The caller has no permision.

components:
  schemas:
    Customer:
      type: object
      properties:
        firstName:
          type: string
          description: The customer first name
        lastName:
          type: string
          description: The customer last name
        birthDate:
          type: string
          format: date
          description: The customer birthdate
        nationality:
          type: string
          description: The customer nationality code 3 letters in ISO 3166-1 alpha-3 format
          example: VNM
        address:
          $ref: "#/components/schemas/Address"

    Address:
      type: object
      required:
        - country
        - zipCode
        - city
      properties:
        country:
          type: string
          description: The country code 3 letters in ISO 3166-1 alpha-3 format.
          example: VNM
        zipCode:
          type: string
          description: The postal code or ZIP code.
        city:
          type: string
          description: The city or locality name.
        street:
          type: string
          description: The street name.
        houseNumber:
          type: string
          description: The house or building number.

    IdentityDocument:
      type: object
      required:
        - documentType
        - number
        - validTill
      properties:
        documentType:
          type: string
          format: open-enumeration
          description: |
            The type of the identity document:
            - PASSPORT
            - ID_CARD
        number:
          type: string
          description: The identification number of the document.
        validFrom:
          type: string
          format: date
          description: The date from which the document is valid.
        validTill:
          type: string
          format: date
          description: The expiration date of the document.
